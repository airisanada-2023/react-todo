{"ast":null,"code":"import _toConsumableArray from\"/Users/user/Documents/study2023/react-todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/user/Documents/study2023/react-todo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useRef}from\"react\";import TodoList from\"./TodoList\";import{v4 as uuidv4}from\"uuid\";//ランダムな文字列生成される\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];// useState=>変数を管理するためのものフックス\n// todos=>追加していくタスク（オブジェクト）\n// todosが更新されたら画面が再レンダリングされる（更新される）\n// つまり無駄な再レンダリングを防げる\n// setTodos=>todosの中身を更新したいときに使う関数\nvar todoNameRef=useRef();// useRef使えば簡単に要素（文字列）を取得できる\nvar handleAddTodo=function handleAddTodo(){//タスクを追加する\nvar name=todoNameRef.current.value;//入力した文字列取得\nif(name===\"\")return;//returnはこれ以上は進みませんという意味。空のタスクは作成できない。\nsetTodos(function(prevTodos){return[].concat(_toConsumableArray(prevTodos),[{id:uuidv4(),name:name,completed:false}]);// ...prevTodos=>今あるタスクたち\n// {}内=>プラスで追加するタスク\n});todoNameRef.current.value=null;//なぜヌル？\n};var toggleTodo=function toggleTodo(id){//idでどのタスクにチェック入れるのか判別\nvar newTodos=_toConsumableArray(todos);//todosの中のオブジェクトをnewTodosにコピー。\nvar todo=newTodos.find(function(todo){return todo.id===id;});//各todoの中で引数のidと同じidを持つものを探し、const todoのtodoに代入\ntodo.completed=!todo.completed;setTodos(newTodos);//todoリストの更新\n};var handleClear=function handleClear(){var newTodos=todos.filter(function(todo){return!todo.completed;});{/* falseのものだけをフィルタリングする（残す） */}setTodos(newTodos);};return/*#__PURE__*/_jsxs(\"div\",{children:[\" \",/*#__PURE__*/_jsx(TodoList,{todos:todos,toggleTodo:toggleTodo}),\" \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:todoNameRef}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:handleAddTodo,children:\"\\u30BF\\u30B9\\u30AF\\u3092\\u8FFD\\u52A0\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClear,children:\"\\u5B8C\\u4E86\\u3057\\u305F\\u30BF\\u30B9\\u30AF\\u306E\\u524A\\u9664\"}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u6B8B\\u308A\\u306E\\u30BF\\u30B9\\u30AF:\",todos.filter(function(todo){return!todo.completed;}).length]}),\" \"]});};export default App;","map":{"version":3,"names":["useState","useRef","TodoList","v4","uuidv4","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","todos","setTodos","todoNameRef","handleAddTodo","name","current","value","prevTodos","concat","_toConsumableArray","id","completed","toggleTodo","newTodos","todo","find","handleClear","filter","children","type","ref","onClick","length"],"sources":["/Users/user/Documents/study2023/react-todo/src/App.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { v4 as uuidv4 } from \"uuid\"; //ランダムな文字列生成される\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  // useState=>変数を管理するためのものフックス\n  // todos=>追加していくタスク（オブジェクト）\n  // todosが更新されたら画面が再レンダリングされる（更新される）\n  // つまり無駄な再レンダリングを防げる\n  // setTodos=>todosの中身を更新したいときに使う関数\n\n  const todoNameRef = useRef();\n  // useRef使えば簡単に要素（文字列）を取得できる\n\n  const handleAddTodo = () => {\n    //タスクを追加する\n\n    const name = todoNameRef.current.value; //入力した文字列取得\n\n    if (name === \"\") return; //returnはこれ以上は進みませんという意味。空のタスクは作成できない。\n\n    setTodos((prevTodos) => {\n      return [...prevTodos, {id: uuidv4(), name: name, completed: false}]\n      // ...prevTodos=>今あるタスクたち\n      // {}内=>プラスで追加するタスク\n    });\n\n    todoNameRef.current.value = null; //なぜヌル？\n\n  };\n\n  const toggleTodo = (id) => { //idでどのタスクにチェック入れるのか判別\n    const newTodos = [...todos]; //todosの中のオブジェクトをnewTodosにコピー。\n    const todo = newTodos.find((todo) => todo.id === id); //各todoの中で引数のidと同じidを持つものを探し、const todoのtodoに代入\n    todo.completed = !todo.completed;\n    setTodos(newTodos); //todoリストの更新\n  };\n\n  const handleClear = () => {\n    const newTodos = todos.filter((todo) => !todo.completed); {/* falseのものだけをフィルタリングする（残す） */}\n    setTodos(newTodos);\n  };\n\n  return (\n    <div> {/* このdiv削除するとエラーなる */}\n      <TodoList todos={todos} toggleTodo={toggleTodo} /> {/* todosという名前でtodosという変数を渡してあげてね */}\n      <input type=\"text\" ref={todoNameRef} /> {/* 入力した文字をtodoNameRef関数で取得 */}\n      <button onClick={handleAddTodo}>タスクを追加</button>\n      <button onClick={handleClear}>完了したタスクの削除</button>\n      <div>残りのタスク:{todos.filter((todo) => !todo.completed).length}</div> {/* falseのものだけをフィルタリングする（残す） */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"wQAAA,OAASA,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CACxC,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,OAASC,EAAE,GAAI,CAAAC,MAAM,KAAQ,MAAM,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb,IAAAC,SAAA,CAA0BV,QAAQ,CAAC,EAAE,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB;AACA;AACA;AACA;AACA;AAEA,GAAM,CAAAI,WAAW,CAAGd,MAAM,CAAC,CAAC,CAC5B;AAEA,GAAM,CAAAe,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B;AAEA,GAAM,CAAAC,IAAI,CAAGF,WAAW,CAACG,OAAO,CAACC,KAAK,CAAE;AAExC,GAAIF,IAAI,GAAK,EAAE,CAAE,OAAQ;AAEzBH,QAAQ,CAAC,SAACM,SAAS,CAAK,CACtB,SAAAC,MAAA,CAAAC,kBAAA,CAAWF,SAAS,GAAE,CAACG,EAAE,CAAEnB,MAAM,CAAC,CAAC,CAAEa,IAAI,CAAEA,IAAI,CAAEO,SAAS,CAAE,KAAK,CAAC,GAClE;AACA;AACF,CAAC,CAAC,CAEFT,WAAW,CAACG,OAAO,CAACC,KAAK,CAAG,IAAI,CAAE;AAEpC,CAAC,CAED,GAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIF,EAAE,CAAK,CAAE;AAC3B,GAAM,CAAAG,QAAQ,CAAAJ,kBAAA,CAAOT,KAAK,CAAC,CAAE;AAC7B,GAAM,CAAAc,IAAI,CAAGD,QAAQ,CAACE,IAAI,CAAC,SAACD,IAAI,QAAK,CAAAA,IAAI,CAACJ,EAAE,GAAKA,EAAE,GAAC,CAAE;AACtDI,IAAI,CAACH,SAAS,CAAG,CAACG,IAAI,CAACH,SAAS,CAChCV,QAAQ,CAACY,QAAQ,CAAC,CAAE;AACtB,CAAC,CAED,GAAM,CAAAG,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB,GAAM,CAAAH,QAAQ,CAAGb,KAAK,CAACiB,MAAM,CAAC,SAACH,IAAI,QAAK,CAACA,IAAI,CAACH,SAAS,GAAC,CAAE,CAAC,+BAC3DV,QAAQ,CAACY,QAAQ,CAAC,CACpB,CAAC,CAED,mBACElB,KAAA,QAAAuB,QAAA,EAAK,GAAC,cACJzB,IAAA,CAACJ,QAAQ,EAACW,KAAK,CAAEA,KAAM,CAACY,UAAU,CAAEA,UAAW,CAAE,CAAC,IAAC,cACnDnB,IAAA,UAAO0B,IAAI,CAAC,MAAM,CAACC,GAAG,CAAElB,WAAY,CAAE,CAAC,IAAC,cACxCT,IAAA,WAAQ4B,OAAO,CAAElB,aAAc,CAAAe,QAAA,CAAC,sCAAM,CAAQ,CAAC,cAC/CzB,IAAA,WAAQ4B,OAAO,CAAEL,WAAY,CAAAE,QAAA,CAAC,8DAAU,CAAQ,CAAC,cACjDvB,KAAA,QAAAuB,QAAA,EAAK,uCAAO,CAAClB,KAAK,CAACiB,MAAM,CAAC,SAACH,IAAI,QAAK,CAACA,IAAI,CAACH,SAAS,GAAC,CAACW,MAAM,EAAM,CAAC,IAAC,EAChE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}