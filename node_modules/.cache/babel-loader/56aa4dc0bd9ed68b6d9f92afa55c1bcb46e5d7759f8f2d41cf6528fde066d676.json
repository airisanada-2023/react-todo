{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/study2023/react-todo/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    name: \"Todo1\",\n    completed: false\n  }]);\n  // useState=>変数を管理するためのものフックス\n  // todos=>追加していくタスク（オブジェクト）\n  // todosが更新されたら画面が再レンダリングされる（更新される）\n  // つまり無駄な再レンダリングを防げる\n\n  const handleAddTodo = () => {\n    //タスクを追加する\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"\\u30BF\\u30B9\\u30AF\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\u5B8C\\u4E86\\u3057\\u305F\\u30BF\\u30B9\\u30AF\\u306E\\u524A\\u9664\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u6B8B\\u308A\\u306E\\u30BF\\u30B9\\u30AF:0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nobniQC1bwbBh4K6Pl8Q3pHkMJA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","id","name","completed","handleAddTodo","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/user/Documents/study2023/react-todo/src/App.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport TodoList from \"./TodoList\";\n\nfunction App() {\n\n  const [todos, setTodos] = useState([\n    {id:1, name:\"Todo1\", completed:false},\n  ]);\n  // useState=>変数を管理するためのものフックス\n  // todos=>追加していくタスク（オブジェクト）\n  // todosが更新されたら画面が再レンダリングされる（更新される）\n  // つまり無駄な再レンダリングを防げる\n\n  const handleAddTodo = () => {\n    //タスクを追加する\n\n  }\n\n  return (\n    <div>\n    {/* ↑このdiv削除するとエラーなる */}\n      <TodoList todos={todos} />\n      {/* todosという名前でtodosという変数を渡してあげてね */}\n      <input type=\"text\"></input>\n      <button onClick={handleAddTodo}>タスクを追加</button>\n      <button>完了したタスクの削除</button>\n      <div>残りのタスク:0</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CACjC;IAACS,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,OAAO;IAAEC,SAAS,EAAC;EAAK,CAAC,CACtC,CAAC;EACF;EACA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;EAAA,CAED;EAED,oBACER,OAAA;IAAAS,QAAA,gBAEET,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1Bb,OAAA;MAAOc,IAAI,EAAC;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3Bb,OAAA;MAAQe,OAAO,EAAEP,aAAc;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/Cb,OAAA;MAAAS,QAAA,EAAQ;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3Bb,OAAA;MAAAS,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACX,EAAA,CA1BQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}